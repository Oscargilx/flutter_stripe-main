// android/app/build.gradle

apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"

// Instead of applying the unsupported React plugin,
// apply the React Native Gradle script:
apply from: "../../node_modules/react-native/react.gradle"

// React Native configuration block
react {
    autolinkLibrariesWithApp()
}

// Flag for enabling Proguard in release builds
def enableProguardInReleaseBuilds = false

// Define hermesEnabled flag (defaulting to false if not set)
def hermesEnabled = (findProperty("hermesEnabled") ?: "false").toBoolean()

// JavaScriptCore flavor dependency
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.mypaymentapp"
    defaultConfig {
        applicationId "com.mypaymentapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // In production, you should use your own keystore file.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin.
    implementation("com.facebook.react:react-android")
    if (hermesEnabled) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
