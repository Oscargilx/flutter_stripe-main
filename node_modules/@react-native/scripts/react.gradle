apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"

// Determine the correct path for react.gradle.
// Try the default location, and if not found, use the alternate location.
def reactGradlePath = "../../node_modules/react-native/react.gradle"
if (!file(reactGradlePath).exists()) {
    reactGradlePath = "../../node_modules/react-native/scripts/react.gradle"
}
apply from: reactGradlePath

react {
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = false
def hermesEnabled = (findProperty("hermesEnabled") ?: "false").toBoolean()
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    // Hard-coded SDK versions to ensure they are specified.
    compileSdkVersion 35
    buildToolsVersion "35.0.0"
    ndkVersion "25.2.9519653"

    namespace "com.mypaymentapp"
    defaultConfig {
        applicationId "com.mypaymentapp"
        minSdkVersion 21
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // In production, use your own keystore.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    if (hermesEnabled) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
